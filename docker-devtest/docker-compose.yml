version: '2'

services:
  # Frontend
  frontend:
    image: nginx:1.14-alpine
    ports:
      - "81:80"
    volumes:
      - ./app-config/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ../frontend:/usr/share/nginx/html
    links:
      - backend

  # Backend
  backend:
    image: skeleton_java10
    build: ./compose/java
    command: /setup/run-jar.sh backend.jar postgresql:5432 redis:6379 2
    ports:
      - "8081:8080"
      - "4081:4000"
    environment:
      - "JAVA_DEBUG=${BACKEND_DEBUG}"
      - "spring.profiles.active=local"
      - "logging.config=./log4j2.xml"
      - "spring.datasource.url=jdbc:postgresql://postgresql/docker"
      - "spring.datasource.username=docker"
      - "spring.datasource.password=docker"
      - "spring.redis.host=redis"
      - "spring.redis.port=6379"
    volumes:
      - ./.deploy/backend.jar:/code/backend.jar
      - ./app-config/log4j2.xml:/code/log4j2.xml
    links:
      - postgresql
      - redis
    depends_on:
      - postgresql
      - redis

  # Database
  postgresql:
    image: postgres:10-alpine
    ports:
      - "5432:5432"
    environment:
      - "POSTGRES_PASSWORD=ca5d339b9dd64fdfbe6e8e5625456ef7"
    volumes:
      - ./app-config/postgresql-initdb.d:/docker-entrypoint-initdb.d

  redis:
    image: redis:5.0-alpine
    ports:
      - "6379:6379"
