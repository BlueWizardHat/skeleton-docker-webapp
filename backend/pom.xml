<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.1.RELEASE</version>
	</parent>

	<name>DockerWebApp</name>
	<groupId>net.bluewizardhat.dockerwebapp</groupId>
	<artifactId>backend-root</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<description>DockerWebApp</description>

	<properties>
		<!-- Project configuration properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<targetJdk>1.8</targetJdk>
		<java.version>1.8</java.version>

		<!-- Spring dependency versions -->
		<spring.boot.version>2.1.1.RELEASE</spring.boot.version>

		<!-- Ensure we have newest versions of lombok and guava -->
		<lombok.version>1.18.4</lombok.version>
		<guava.version>27.0-jre</guava.version>

		<!-- Stuff not in the BOM -->
		<swagger.version>2.0.5</swagger.version>
		<springfox-swagger.version>2.9.2</springfox-swagger.version>
		<hibernate-jpa.version>1.0.2.Final</hibernate-jpa.version>
		<csrf-token-filter.version>1.1</csrf-token-filter.version>
		<argon2.version>2.5</argon2.version>
		<postgres.version>42.2.5</postgres.version>

		<!-- Override kotlin version to newest -->
		<kotlin.version>1.3.20</kotlin.version>
		<kotlin-logging.version>1.6.22</kotlin-logging.version>
	</properties>

	<modules>
		<module>common-utils</module>
		<module>database</module>
		<module>domain-model</module>
		<module>domain-logic</module>
		<module>webapp</module>
		<module>jacoco-report</module>
	</modules>

	<!-- Dependencies that all projects get -->
	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.microutils</groupId>
			<artifactId>kotlin-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib-jdk8</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- Library versions from Spring-Boot (implicit since it's the parent) -->
			<!--
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-parent</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			-->
			<!-- Ensure we have newest versions of lombok and guava -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<!-- Stuff not in the BOM -->
			<dependency>
				<groupId>io.swagger.core.v3</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.swagger.core.v3</groupId>
				<artifactId>swagger-project</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.swagger.core.v3</groupId>
				<artifactId>swagger-models</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${springfox-swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${springfox-swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.1-api</artifactId>
				<version>${hibernate-jpa.version}</version>
			</dependency>
			<dependency>
				<groupId>de.mkammerer</groupId>
				<artifactId>argon2-jvm</artifactId>
				<version>${argon2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgres.version}</version>
			</dependency>
			<dependency>
				<groupId>com.allanditzel</groupId>
				<artifactId>spring-security-csrf-token-filter</artifactId>
				<version>${csrf-token-filter.version}</version>
			</dependency>

			<!-- Override kotlin version to newest -->
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-stdlib-common</artifactId>
				<version>${kotlin.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.microutils</groupId>
				<artifactId>kotlin-logging</artifactId>
				<version>${kotlin-logging.version}</version>
			</dependency>

			<!-- Project components -->
			<dependency>
				<groupId>net.bluewizardhat.dockerwebapp</groupId>
				<artifactId>webapp</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>net.bluewizardhat.dockerwebapp</groupId>
				<artifactId>common-utils</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>net.bluewizardhat.dockerwebapp</groupId>
				<artifactId>domain-logic</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>net.bluewizardhat.dockerwebapp</groupId>
				<artifactId>domain-model</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>net.bluewizardhat.dockerwebapp</groupId>
				<artifactId>database</artifactId>
				<version>${project.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<artifactId>kotlin-maven-plugin</artifactId>
				<groupId>org.jetbrains.kotlin</groupId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
					<configuration>
						<source>${targetJdk}</source>
						<target>${targetJdk}</target>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>kotlin-maven-plugin</artifactId>
					<groupId>org.jetbrains.kotlin</groupId>
					<version>${kotlin.version}</version>
					<configuration>
						<compilerPlugins>
							<plugin>spring</plugin>
						</compilerPlugins>
					</configuration>
					<executions>
						<execution>
							<id>compile</id>
							<goals>
								<goal>compile</goal>
							</goals>
							<configuration>
								<sourceDirs>
									<sourceDir>${project.basedir}/src/main/kotlin</sourceDir>
								</sourceDirs>
							</configuration>
						</execution>
						<execution>
							<id>test-compile</id>
							<goals>
								<goal>test-compile</goal>
							</goals>
							<configuration>
								<sourceDirs>
									<sourceDir>${project.basedir}/src/test/kotlin</sourceDir>
								</sourceDirs>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.jetbrains.kotlin</groupId>
							<artifactId>kotlin-maven-allopen</artifactId>
							<version>${kotlin.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.0.0</version>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/main/kotlin</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.2</version>
					<executions>
						<execution>
							<id>jacoco-initialize</id>
							<goals>
								<goal>prepare-agent</goal>
								<goal>report</goal>
								<!-- <goal>check</goal> -->
							</goals>
							<configuration>
								<rules>
									<rule>
										<element>CLASS</element>
										<excludes>
											<exclude>*Test</exclude>
											<exclude>*Config</exclude>
											<exclude>*Application</exclude>
										</excludes>
										<limits>
											<limit>
												<counter>LINE</counter>
												<value>COVEREDRATIO</value>
												<minimum>85%</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>3.0.0-M2</version>
					<executions>
						<execution>
							<id>enforce</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<banDuplicatePomDependencyVersions/>
									<dependencyConvergence/>
									<reactorModuleConvergence />
									<requireReleaseDeps>
										<failWhenParentIsSnapshot>false</failWhenParentIsSnapshot>
										<excludes>
											<exclude>net.bluewizardhat.dockerwebapp:*</exclude>
										</excludes>
									</requireReleaseDeps>
									<!-- <requireUpperBoundDeps /> -->
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>2.2.5</version>
					<executions>
						<execution>
							<id>get-the-git-infos</id>
							<goals>
								<goal>revision</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
						<generateGitPropertiesFile>false</generateGitPropertiesFile>
						<prefix>git</prefix>
						<verbose>false</verbose>
						<gitDescribe>
							<skip>false</skip>
							<always>false</always>
							<dirty>-dirty</dirty>
						</gitDescribe>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
